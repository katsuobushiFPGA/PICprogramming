

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri Jul 04 17:02:25 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77                           
    78                           	psect	idataBANK1
    79  05A7                     __pidataBANK1:	
    80                           
    81                           ;initializer for main@F1185
    82  05A7  3424               	retlw	36
    83  05A8  3410               	retlw	16
    84  05A9  3424               	retlw	36
    85  05AA  340C               	retlw	12
    86  05AB  3424               	retlw	36
    87  05AC  3403               	retlw	3
    88  05AD  34FE               	retlw	254
    89  05AE  34FF               	retlw	255
    90  05AF  3422               	retlw	34
    91  05B0  3401               	retlw	1
    92  05B1  3423               	retlw	35
    93  05B2  3486               	retlw	134
    94  05B3  34C1               	retlw	193
    95  05B4  34C0               	retlw	192
    96  05B5  3478               	retlw	120
    97  05B6  3460               	retlw	96
    98  05B7  3400               	retlw	0
    99  05B8  3438               	retlw	56
   100  05B9  3400               	retlw	0
   101  05BA  340F               	retlw	15
   102  05BB  34FF               	retlw	255
   103  05BC  3401               	retlw	1
   104  05BD  3400               	retlw	0
   105  05BE  340F               	retlw	15
   106  05BF  3440               	retlw	64
   107  05C0  3438               	retlw	56
   108  05C1  3470               	retlw	112
   109  05C2  3460               	retlw	96
   110  05C3  341C               	retlw	28
   111  05C4  34C0               	retlw	192
   112  05C5  3400               	retlw	0
   113  05C6  3480               	retlw	128
   114  0006                     _PORTB	set	6
   115  0007                     _PORTC	set	7
   116  0008                     _PORTD	set	8
   117  0086                     _TRISB	set	134
   118  0087                     _TRISC	set	135
   119  0088                     _TRISD	set	136
   120                           
   121                           ; #config settings
   122  0000                     
   123                           	psect	cinit
   124  07F0                     start_initialization:	
   125  07F0                     __initialization:	
   126                           
   127                           ; Initialize objects allocated to BANK1
   128  07F0  1383               	bcf	3,7	;select IRP bank0
   129  07F1  30C0               	movlw	low (__pdataBANK1+32)
   130  07F2  00FD               	movwf	btemp+-1
   131  07F3  3005               	movlw	high __pidataBANK1
   132  07F4  00FE               	movwf	btemp
   133  07F5  30A7               	movlw	low __pidataBANK1
   134  07F6  00FF               	movwf	btemp+1
   135  07F7  30A0               	movlw	low __pdataBANK1
   136  07F8  0084               	movwf	4
   137  07F9  120A  118A  259A   	fcall	init_ram0
   138  07FC                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141  07FC                     __end_of__initialization:	
   142  07FC  0183               	clrf	3
   143  07FD  120A  118A  2E34   	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	dataBANK1
   146  00A0                     __pdataBANK1:	
   147  00A0                     main@F1185:	
   148  00A0                     	ds	32
   149                           
   150                           	psect	inittext
   151  0596                     init_fetch0:	
   152                           ;	Called with low address in FSR and high address in W
   153                           
   154  0596  087E               	movf	126,w
   155  0597  008A               	movwf	10
   156  0598  087F               	movf	127,w
   157  0599  0082               	movwf	2
   158  059A                     init_ram0:	
   159                           ;Called with:
   160                           ;	high address of idata address in btemp 
   161                           ;	low address of idata address in btemp+1 
   162                           ;	low address of data in FSR
   163                           ;	high address + 1 of data in btemp-1
   164                           
   165  059A  2596  120A  118A   	fcall	init_fetch0
   166  059D  0080               	movwf	0
   167  059E  0A84               	incf	4,f
   168  059F  0804               	movf	4,w
   169  05A0  067D               	xorwf	125,w
   170  05A1  1903               	btfsc	3,2
   171  05A2  3400               	retlw	0
   172  05A3  0AFF               	incf	127,f
   173  05A4  1903               	btfsc	3,2
   174  05A5  0AFE               	incf	126,f
   175  05A6  2D9A               	goto	init_ram0
   176                           
   177                           	psect	cstackBANK1
   178  00C0                     __pcstackBANK1:	
   179  00C0                     main@w2:	
   180                           
   181                           ; 32 bytes @ 0x0
   182  00C0                     	ds	32
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:	
   186  0070                     ?_copy:	
   187  0070                     ?_word2:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_scroll:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_main:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_line:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     copy@copy:	
   200                           ; 2 bytes @ 0x0
   201                           
   202  0070                     scroll@w2:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     line@data1:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210  0070                     	ds	1
   211  0071                     ??_copy:	
   212  0071                     ??_scroll:	
   213                           ; 0 bytes @ 0x1
   214                           
   215  0071                     line@data2:	
   216                           ; 0 bytes @ 0x1
   217                           
   218                           
   219                           ; 1 bytes @ 0x1
   220  0071                     	ds	1
   221  0072                     ??_line:	
   222  0072                     line@line:	
   223                           ; 0 bytes @ 0x2
   224                           
   225                           
   226                           ; 1 bytes @ 0x2
   227  0072                     	ds	1
   228  0073                     ??_word2:	
   229                           
   230                           ; 0 bytes @ 0x3
   231  0073                     	ds	4
   232  0077                     copy@origin:	
   233  0077                     scroll@w:	
   234                           ; 1 bytes @ 0x7
   235                           
   236                           
   237                           ; 1 bytes @ 0x7
   238  0077                     	ds	1
   239  0078                     copy@i:	
   240  0078                     scroll@i:	
   241                           ; 2 bytes @ 0x8
   242                           
   243                           
   244                           ; 2 bytes @ 0x8
   245  0078                     	ds	2
   246  007A                     scroll@j:	
   247                           
   248                           ; 2 bytes @ 0xA
   249  007A                     	ds	1
   250  007B                     word2@a:	
   251                           
   252                           ; 1 bytes @ 0xB
   253  007B                     	ds	1
   254  007C                     word2@i:	
   255                           
   256                           ; 2 bytes @ 0xC
   257  007C                     	ds	2
   258                           
   259                           	psect	cstackBANK0
   260  0020                     __pcstackBANK0:	
   261  0020                     ??_main:	
   262                           
   263                           ; 0 bytes @ 0x0
   264  0020                     	ds	4
   265  0024                     main@w1:	
   266                           
   267                           ; 32 bytes @ 0x4
   268  0024                     	ds	32
   269  0044                     main@tmp:	
   270                           
   271                           ; 32 bytes @ 0x24
   272  0044                     	ds	32
   273  0064                     main@i:	
   274                           
   275                           ; 2 bytes @ 0x44
   276  0064                     	ds	2
   277                           
   278                           	psect	maintext
   279  0634                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 34 in file "dotmatrix6.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  i               2   68[BANK0 ] int 
   290 ;;  w2             32    0[BANK1 ] unsigned int [16]
   291 ;;  tmp            32   36[BANK0 ] unsigned int [16]
   292 ;;  w1             32    4[BANK0 ] unsigned int [16]
   293 ;; Return value:  Size  Location     Type
   294 ;;		None               void
   295 ;; Registers used:
   296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 17F/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0      66      32       0       0
   304 ;;      Temps:          0       4       0       0       0
   305 ;;      Totals:         0      70      32       0       0
   306 ;;Total ram usage:      102 bytes
   307 ;; Hardware stack levels required when called:    2
   308 ;; This function calls:
   309 ;;		_copy
   310 ;;		_scroll
   311 ;;		_word2
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _main
   319  0634                     _main:	
   320                           
   321                           ;dotmatrix6.c: 36: TRISB = 0x00;
   322                           
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   325  0634  1683               	bsf	3,5	;RP0=1, select bank1
   326  0635  1303               	bcf	3,6	;RP1=0, select bank1
   327  0636  0186               	clrf	6	;volatile
   328                           
   329                           ;dotmatrix6.c: 37: TRISC = 0x00;
   330  0637  0187               	clrf	7	;volatile
   331                           
   332                           ;dotmatrix6.c: 38: TRISD = 0x00;
   333  0638  0188               	clrf	8	;volatile
   334                           
   335                           ;dotmatrix6.c: 40: PORTB = 0x00;
   336  0639  1283               	bcf	3,5	;RP0=0, select bank0
   337  063A  1303               	bcf	3,6	;RP1=0, select bank0
   338  063B  0186               	clrf	6	;volatile
   339                           
   340                           ;dotmatrix6.c: 41: PORTC = 0x00;
   341  063C  0187               	clrf	7	;volatile
   342                           
   343                           ;dotmatrix6.c: 42: PORTD = 0x00;
   344  063D  0188               	clrf	8	;volatile
   345                           
   346                           ;dotmatrix6.c: 44: unsigned int w1[16]={0x1024,0x0c24,0x0324,0xfffe,0x0122,0x8623,0xc0c1
      +                          ,0x6078,0x3800,0x0f00,0x01ff,0x0f00,0x3840,0x6070,0xc01c,0x8000};
   347  063E  3024               	movlw	main@w1& (0+255)
   348  063F  0084               	movwf	4
   349  0640  30A0               	movlw	low main@F1185
   350  0641  00A0               	movwf	??_main
   351  0642  0804               	movf	4,w
   352  0643  00A1               	movwf	??_main+1
   353  0644  3020               	movlw	32
   354  0645  00A2               	movwf	??_main+2
   355  0646                     u200:	
   356  0646  0820               	movf	??_main,w
   357  0647  0084               	movwf	4
   358  0648  1383               	bcf	3,7	;select IRP bank1
   359  0649  0800               	movf	0,w
   360  064A  00A3               	movwf	??_main+3
   361  064B  0AA0               	incf	??_main,f
   362  064C  0821               	movf	??_main+1,w
   363  064D  0084               	movwf	4
   364  064E  0823               	movf	??_main+3,w
   365  064F  0080               	movwf	0
   366  0650  0AA1               	incf	??_main+1,f
   367  0651  0BA2               	decfsz	??_main+2,f
   368  0652  2E46               	goto	u200
   369  0653                     l808:	
   370                           ;dotmatrix6.c: 45: unsigned int w2[16];
   371                           ;dotmatrix6.c: 46: unsigned int tmp[16];
   372                           ;dotmatrix6.c: 47: while(1){
   373                           
   374                           
   375                           ;dotmatrix6.c: 48: copy(w1,tmp);
   376  0653  3044               	movlw	main@tmp& (0+255)
   377  0654  1283               	bcf	3,5	;RP0=0, select bank0
   378  0655  1303               	bcf	3,6	;RP1=0, select bank0
   379  0656  00A0               	movwf	??_main
   380  0657  0820               	movf	??_main,w
   381  0658  00F0               	movwf	copy@copy
   382  0659  3024               	movlw	main@w1& (0+255)
   383  065A  120A  118A  25C7   	fcall	_copy
      +       120A  118A         
   384                           
   385                           ;dotmatrix6.c: 49: copy(w1,w2);
   386  065F  30C0               	movlw	main@w2& (0+255)
   387  0660  1283               	bcf	3,5	;RP0=0, select bank0
   388  0661  1303               	bcf	3,6	;RP1=0, select bank0
   389  0662  00A0               	movwf	??_main
   390  0663  0820               	movf	??_main,w
   391  0664  00F0               	movwf	copy@copy
   392  0665  3024               	movlw	main@w1& (0+255)
   393  0666  120A  118A  25C7   	fcall	_copy
      +       120A  118A         
   394                           
   395                           ;dotmatrix6.c: 50: for(int i=0;i<30;i++){
   396  066B  1283               	bcf	3,5	;RP0=0, select bank0
   397  066C  1303               	bcf	3,6	;RP1=0, select bank0
   398  066D  01E4               	clrf	main@i
   399  066E  01E5               	clrf	main@i+1
   400  066F  0865               	movf	main@i+1,w
   401  0670  3A80               	xorlw	128
   402  0671  00FF               	movwf	127
   403  0672  3080               	movlw	128
   404  0673  027F               	subwf	127,w
   405  0674  1D03               	skipz
   406  0675  2E78               	goto	u215
   407  0676  301E               	movlw	30
   408  0677  0264               	subwf	main@i,w
   409  0678                     u215:	
   410  0678  1803               	btfsc	3,0
   411  0679  2E93               	goto	l824
   412  067A                     l818:	
   413                           
   414                           ;dotmatrix6.c: 51: word2(w2);
   415  067A  30C0               	movlw	main@w2& (0+255)
   416  067B  120A  118A  25F5   	fcall	_word2
      +       120A  118A         
   417  0680  3001               	movlw	1
   418  0681  1283               	bcf	3,5	;RP0=0, select bank0
   419  0682  1303               	bcf	3,6	;RP1=0, select bank0
   420  0683  07E4               	addwf	main@i,f
   421  0684  1803               	skipnc
   422  0685  0AE5               	incf	main@i+1,f
   423  0686  3000               	movlw	0
   424  0687  07E5               	addwf	main@i+1,f
   425  0688  0865               	movf	main@i+1,w
   426  0689  3A80               	xorlw	128
   427  068A  00FF               	movwf	127
   428  068B  3080               	movlw	128
   429  068C  027F               	subwf	127,w
   430  068D  1D03               	skipz
   431  068E  2E91               	goto	u225
   432  068F  301E               	movlw	30
   433  0690  0264               	subwf	main@i,w
   434  0691                     u225:	
   435  0691  1C03               	skipc
   436  0692  2E7A               	goto	l818
   437  0693                     l824:	
   438                           
   439                           ;dotmatrix6.c: 52: }
   440                           ;dotmatrix6.c: 53: scroll(w2,tmp);
   441  0693  3044               	movlw	main@tmp& (0+255)
   442  0694  1283               	bcf	3,5	;RP0=0, select bank0
   443  0695  1303               	bcf	3,6	;RP1=0, select bank0
   444  0696  00A0               	movwf	??_main
   445  0697  0820               	movf	??_main,w
   446  0698  00F0               	movwf	scroll@w2
   447  0699  30C0               	movlw	main@w2& (0+255)
   448  069A  120A  118A  26A0   	fcall	_scroll
      +       120A  118A         
   449  069F  2E53               	goto	l808
   450  06A0                     __end_of_main:	
   451                           
   452                           	psect	text1
   453  05F5                     __ptext1:	
   454 ;; *************** function _word2 *****************
   455 ;; Defined at:
   456 ;;		line 106 in file "dotmatrix6.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;  a               1    wreg     PTR unsigned int 
   459 ;;		 -> main@w2(32), 
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  a               1   11[COMMON] PTR unsigned int 
   462 ;;		 -> main@w2(32), 
   463 ;;  i               2   12[COMMON] int 
   464 ;; Return value:  Size  Location     Type
   465 ;;		None               void
   466 ;; Registers used:
   467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         3       0       0       0       0
   475 ;;      Temps:          8       0       0       0       0
   476 ;;      Totals:        11       0       0       0       0
   477 ;;Total ram usage:       11 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    1
   480 ;; This function calls:
   481 ;;		_line
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _word2
   489  05F5                     _word2:	
   490                           
   491                           ;incstack = 0
   492                           ; Regs used in _word2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   493                           ;word2@a stored from wreg
   494  05F5  00FB               	movwf	word2@a
   495                           
   496                           ;dotmatrix6.c: 107: for(int i=0;i<16;i++){
   497  05F6  01FC               	clrf	word2@i
   498  05F7  01FD               	clrf	word2@i+1
   499  05F8                     L1:	
   500  05F8  087D               	movf	word2@i+1,w
   501  05F9  3A80               	xorlw	128
   502  05FA  00FF               	movwf	127
   503  05FB  3080               	movlw	128
   504  05FC  027F               	subwf	127,w
   505  05FD  1D03               	skipz
   506  05FE  2E01               	goto	u145
   507  05FF  3010               	movlw	16
   508  0600  027C               	subwf	word2@i,w
   509  0601                     u145:	
   510  0601  1803               	btfsc	3,0
   511  0602  0008               	return
   512                           
   513                           ;dotmatrix6.c: 108: line(i,a[i] >> 8,a[i] & 0x00ff);
   514  0603  087C               	movf	word2@i,w
   515  0604  00F3               	movwf	??_word2
   516  0605  0773               	addwf	??_word2,w
   517  0606  077B               	addwf	word2@a,w
   518  0607  00F4               	movwf	??_word2+1
   519  0608  0874               	movf	??_word2+1,w
   520  0609  0084               	movwf	4
   521  060A  1383               	bcf	3,7	;select IRP bank0
   522  060B  0800               	movf	0,w
   523  060C  00F5               	movwf	??_word2+2
   524  060D  0A84               	incf	4,f
   525  060E  0800               	movf	0,w
   526  060F  00F6               	movwf	??_word2+3
   527  0610  0876               	movf	??_word2+3,w
   528  0611  00F7               	movwf	??_word2+4
   529  0612  0877               	movf	??_word2+4,w
   530  0613  00F0               	movwf	line@data1
   531  0614  087C               	movf	word2@i,w
   532  0615  00F8               	movwf	??_word2+5
   533  0616  0778               	addwf	??_word2+5,w
   534  0617  077B               	addwf	word2@a,w
   535  0618  00F9               	movwf	??_word2+6
   536  0619  0879               	movf	??_word2+6,w
   537  061A  0084               	movwf	4
   538  061B  0800               	movf	0,w
   539  061C  00FA               	movwf	??_word2+7
   540  061D  087A               	movf	??_word2+7,w
   541  061E  00F1               	movwf	line@data2
   542  061F  087C               	movf	word2@i,w
   543  0620  120A  118A  2729   	fcall	_line
      +       120A  118A         
   544                           
   545                           ;dotmatrix6.c: 109: _delay((unsigned long)((1)*(20000000/4000.0)));
   546  0625  3007               	movlw	7
   547  0626  00F4               	movwf	??_word2+1
   548  0627  307D               	movlw	125
   549  0628  00F3               	movwf	??_word2
   550  0629                     u237:	
   551  0629  0BF3               	decfsz	??_word2,f
   552  062A  2E29               	goto	u237
   553  062B  0BF4               	decfsz	??_word2+1,f
   554  062C  2E29               	goto	u237
   555  062D  3001               	movlw	1
   556  062E  07FC               	addwf	word2@i,f
   557  062F  1803               	skipnc
   558  0630  0AFD               	incf	word2@i+1,f
   559  0631  3000               	movlw	0
   560  0632  07FD               	addwf	word2@i+1,f
   561  0633  2DF8               	goto	L1
   562  0634                     __end_of_word2:	
   563                           
   564                           	psect	text2
   565  0729                     __ptext2:	
   566 ;; *************** function _line *****************
   567 ;; Defined at:
   568 ;;		line 112 in file "dotmatrix6.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  line            1    wreg     unsigned char 
   571 ;;  data1           1    0[COMMON] unsigned char 
   572 ;;  data2           1    1[COMMON] unsigned char 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  line            1    2[COMMON] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  2    0[COMMON] int 
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         2       0       0       0       0
   585 ;;      Locals:         1       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0
   587 ;;      Totals:         3       0       0       0       0
   588 ;;Total ram usage:        3 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_word2
   594 ;;		_word
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           
   599                           ;psect for function _line
   600  0729                     _line:	
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _line: [wreg-fsr0h+status,2+status,0]
   604                           ;line@line stored from wreg
   605  0729  00F2               	movwf	line@line
   606                           
   607                           ;dotmatrix6.c: 113: switch(line){
   608  072A  2FBD               	goto	l748
   609  072B                     l702:	
   610                           ;dotmatrix6.c: 114: case 1:PORTB=0x00;
   611                           
   612  072B  1283               	bcf	3,5	;RP0=0, select bank0
   613  072C  1303               	bcf	3,6	;RP1=0, select bank0
   614  072D  0186               	clrf	6	;volatile
   615                           
   616                           ;dotmatrix6.c: 115: PORTB=0b00010000;
   617  072E  3010               	movlw	16
   618  072F  0086               	movwf	6	;volatile
   619                           
   620                           ;dotmatrix6.c: 116: PORTD=data1;
   621  0730  0870               	movf	line@data1,w
   622  0731  0088               	movwf	8	;volatile
   623                           
   624                           ;dotmatrix6.c: 117: PORTC=data2;
   625  0732  0871               	movf	line@data2,w
   626  0733  0087               	movwf	7	;volatile
   627                           
   628                           ;dotmatrix6.c: 118: break;
   629  0734  0008               	return
   630  0735                     l710:	
   631                           ;dotmatrix6.c: 119: case 2:PORTB=0b00110000;
   632                           
   633  0735  3030               	movlw	48
   634  0736  1283               	bcf	3,5	;RP0=0, select bank0
   635  0737  1303               	bcf	3,6	;RP1=0, select bank0
   636  0738  0086               	movwf	6	;volatile
   637                           
   638                           ;dotmatrix6.c: 120: PORTD=data1;
   639  0739  0870               	movf	line@data1,w
   640  073A  0088               	movwf	8	;volatile
   641                           
   642                           ;dotmatrix6.c: 121: PORTC=data2;
   643  073B  0871               	movf	line@data2,w
   644  073C  0087               	movwf	7	;volatile
   645                           
   646                           ;dotmatrix6.c: 122: break;
   647  073D  0008               	return
   648  073E                     l712:	
   649                           ;dotmatrix6.c: 123: case 3:PORTB=0b01010000;
   650                           
   651  073E  3050               	movlw	80
   652  073F  1283               	bcf	3,5	;RP0=0, select bank0
   653  0740  1303               	bcf	3,6	;RP1=0, select bank0
   654  0741  0086               	movwf	6	;volatile
   655                           
   656                           ;dotmatrix6.c: 124: PORTD=data1;
   657  0742  0870               	movf	line@data1,w
   658  0743  0088               	movwf	8	;volatile
   659                           
   660                           ;dotmatrix6.c: 125: PORTC=data2;
   661  0744  0871               	movf	line@data2,w
   662  0745  0087               	movwf	7	;volatile
   663                           
   664                           ;dotmatrix6.c: 126: break;
   665  0746  0008               	return
   666  0747                     l714:	
   667                           ;dotmatrix6.c: 127: case 4:PORTB=0b01110000;
   668                           
   669  0747  3070               	movlw	112
   670  0748  1283               	bcf	3,5	;RP0=0, select bank0
   671  0749  1303               	bcf	3,6	;RP1=0, select bank0
   672  074A  0086               	movwf	6	;volatile
   673                           
   674                           ;dotmatrix6.c: 128: PORTD=data1;
   675  074B  0870               	movf	line@data1,w
   676  074C  0088               	movwf	8	;volatile
   677                           
   678                           ;dotmatrix6.c: 129: PORTC=data2;
   679  074D  0871               	movf	line@data2,w
   680  074E  0087               	movwf	7	;volatile
   681                           
   682                           ;dotmatrix6.c: 130: break;
   683  074F  0008               	return
   684  0750                     l716:	
   685                           ;dotmatrix6.c: 131: case 5:PORTB=0b10010000;
   686                           
   687  0750  3090               	movlw	144
   688  0751  1283               	bcf	3,5	;RP0=0, select bank0
   689  0752  1303               	bcf	3,6	;RP1=0, select bank0
   690  0753  0086               	movwf	6	;volatile
   691                           
   692                           ;dotmatrix6.c: 132: PORTD=data1;
   693  0754  0870               	movf	line@data1,w
   694  0755  0088               	movwf	8	;volatile
   695                           
   696                           ;dotmatrix6.c: 133: PORTC=data2;
   697  0756  0871               	movf	line@data2,w
   698  0757  0087               	movwf	7	;volatile
   699                           
   700                           ;dotmatrix6.c: 134: break;
   701  0758  0008               	return
   702  0759                     l718:	
   703                           ;dotmatrix6.c: 135: case 6:PORTB=0b10110000;
   704                           
   705  0759  30B0               	movlw	176
   706  075A  1283               	bcf	3,5	;RP0=0, select bank0
   707  075B  1303               	bcf	3,6	;RP1=0, select bank0
   708  075C  0086               	movwf	6	;volatile
   709                           
   710                           ;dotmatrix6.c: 136: PORTD=data1;
   711  075D  0870               	movf	line@data1,w
   712  075E  0088               	movwf	8	;volatile
   713                           
   714                           ;dotmatrix6.c: 137: PORTC=data2;
   715  075F  0871               	movf	line@data2,w
   716  0760  0087               	movwf	7	;volatile
   717                           
   718                           ;dotmatrix6.c: 138: break;
   719  0761  0008               	return
   720  0762                     l720:	
   721                           ;dotmatrix6.c: 139: case 7:PORTB=0b11010000;
   722                           
   723  0762  30D0               	movlw	208
   724  0763  1283               	bcf	3,5	;RP0=0, select bank0
   725  0764  1303               	bcf	3,6	;RP1=0, select bank0
   726  0765  0086               	movwf	6	;volatile
   727                           
   728                           ;dotmatrix6.c: 140: PORTD=data1;
   729  0766  0870               	movf	line@data1,w
   730  0767  0088               	movwf	8	;volatile
   731                           
   732                           ;dotmatrix6.c: 141: PORTC=data2;
   733  0768  0871               	movf	line@data2,w
   734  0769  0087               	movwf	7	;volatile
   735                           
   736                           ;dotmatrix6.c: 142: break;
   737  076A  0008               	return
   738  076B                     l722:	
   739                           ;dotmatrix6.c: 143: case 8:PORTB=0b11110000;
   740                           
   741  076B  30F0               	movlw	240
   742  076C  1283               	bcf	3,5	;RP0=0, select bank0
   743  076D  1303               	bcf	3,6	;RP1=0, select bank0
   744  076E  0086               	movwf	6	;volatile
   745                           
   746                           ;dotmatrix6.c: 144: PORTD=data1;
   747  076F  0870               	movf	line@data1,w
   748  0770  0088               	movwf	8	;volatile
   749                           
   750                           ;dotmatrix6.c: 145: PORTC=data2;
   751  0771  0871               	movf	line@data2,w
   752  0772  0087               	movwf	7	;volatile
   753                           
   754                           ;dotmatrix6.c: 146: break;
   755  0773  0008               	return
   756  0774                     l724:	
   757                           ;dotmatrix6.c: 147: case 9:PORTB=0x00;
   758                           
   759  0774  1283               	bcf	3,5	;RP0=0, select bank0
   760  0775  1303               	bcf	3,6	;RP1=0, select bank0
   761  0776  0186               	clrf	6	;volatile
   762                           
   763                           ;dotmatrix6.c: 148: PORTB=0b00000001;
   764  0777  3001               	movlw	1
   765  0778  0086               	movwf	6	;volatile
   766                           
   767                           ;dotmatrix6.c: 149: PORTD=data1;
   768  0779  0870               	movf	line@data1,w
   769  077A  0088               	movwf	8	;volatile
   770                           
   771                           ;dotmatrix6.c: 150: PORTC=data2;
   772  077B  0871               	movf	line@data2,w
   773  077C  0087               	movwf	7	;volatile
   774                           
   775                           ;dotmatrix6.c: 151: break;
   776  077D  0008               	return
   777  077E                     l732:	
   778                           ;dotmatrix6.c: 152: case 10:PORTB=0b00000011;
   779                           
   780  077E  3003               	movlw	3
   781  077F  1283               	bcf	3,5	;RP0=0, select bank0
   782  0780  1303               	bcf	3,6	;RP1=0, select bank0
   783  0781  0086               	movwf	6	;volatile
   784                           
   785                           ;dotmatrix6.c: 153: PORTD=data1;
   786  0782  0870               	movf	line@data1,w
   787  0783  0088               	movwf	8	;volatile
   788                           
   789                           ;dotmatrix6.c: 154: PORTC=data2;
   790  0784  0871               	movf	line@data2,w
   791  0785  0087               	movwf	7	;volatile
   792                           
   793                           ;dotmatrix6.c: 155: break;
   794  0786  0008               	return
   795  0787                     l734:	
   796                           ;dotmatrix6.c: 156: case 11:PORTB=0b00000101;
   797                           
   798  0787  3005               	movlw	5
   799  0788  1283               	bcf	3,5	;RP0=0, select bank0
   800  0789  1303               	bcf	3,6	;RP1=0, select bank0
   801  078A  0086               	movwf	6	;volatile
   802                           
   803                           ;dotmatrix6.c: 157: PORTD=data1;
   804  078B  0870               	movf	line@data1,w
   805  078C  0088               	movwf	8	;volatile
   806                           
   807                           ;dotmatrix6.c: 158: PORTC=data2;
   808  078D  0871               	movf	line@data2,w
   809  078E  0087               	movwf	7	;volatile
   810                           
   811                           ;dotmatrix6.c: 159: break;
   812  078F  0008               	return
   813  0790                     l736:	
   814                           ;dotmatrix6.c: 160: case 12:PORTB=0b00000111;
   815                           
   816  0790  3007               	movlw	7
   817  0791  1283               	bcf	3,5	;RP0=0, select bank0
   818  0792  1303               	bcf	3,6	;RP1=0, select bank0
   819  0793  0086               	movwf	6	;volatile
   820                           
   821                           ;dotmatrix6.c: 161: PORTD=data1;
   822  0794  0870               	movf	line@data1,w
   823  0795  0088               	movwf	8	;volatile
   824                           
   825                           ;dotmatrix6.c: 162: PORTC=data2;
   826  0796  0871               	movf	line@data2,w
   827  0797  0087               	movwf	7	;volatile
   828                           
   829                           ;dotmatrix6.c: 163: break;
   830  0798  0008               	return
   831  0799                     l738:	
   832                           ;dotmatrix6.c: 164: case 13:PORTB=0b00001001;
   833                           
   834  0799  3009               	movlw	9
   835  079A  1283               	bcf	3,5	;RP0=0, select bank0
   836  079B  1303               	bcf	3,6	;RP1=0, select bank0
   837  079C  0086               	movwf	6	;volatile
   838                           
   839                           ;dotmatrix6.c: 165: PORTD=data1;
   840  079D  0870               	movf	line@data1,w
   841  079E  0088               	movwf	8	;volatile
   842                           
   843                           ;dotmatrix6.c: 166: PORTC=data2;
   844  079F  0871               	movf	line@data2,w
   845  07A0  0087               	movwf	7	;volatile
   846                           
   847                           ;dotmatrix6.c: 167: break;
   848  07A1  0008               	return
   849  07A2                     l740:	
   850                           ;dotmatrix6.c: 168: case 14:PORTB=0b00001011;
   851                           
   852  07A2  300B               	movlw	11
   853  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   854  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   855  07A5  0086               	movwf	6	;volatile
   856                           
   857                           ;dotmatrix6.c: 169: PORTD=data1;
   858  07A6  0870               	movf	line@data1,w
   859  07A7  0088               	movwf	8	;volatile
   860                           
   861                           ;dotmatrix6.c: 170: PORTC=data2;
   862  07A8  0871               	movf	line@data2,w
   863  07A9  0087               	movwf	7	;volatile
   864                           
   865                           ;dotmatrix6.c: 171: break;
   866  07AA  0008               	return
   867  07AB                     l742:	
   868                           ;dotmatrix6.c: 172: case 15:PORTB=0b00001101;
   869                           
   870  07AB  300D               	movlw	13
   871  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   872  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   873  07AE  0086               	movwf	6	;volatile
   874                           
   875                           ;dotmatrix6.c: 173: PORTD=data1;
   876  07AF  0870               	movf	line@data1,w
   877  07B0  0088               	movwf	8	;volatile
   878                           
   879                           ;dotmatrix6.c: 174: PORTC=data2;
   880  07B1  0871               	movf	line@data2,w
   881  07B2  0087               	movwf	7	;volatile
   882                           
   883                           ;dotmatrix6.c: 175: break;
   884  07B3  0008               	return
   885  07B4                     l744:	
   886                           ;dotmatrix6.c: 176: case 16:PORTB=0b00001111;
   887                           
   888  07B4  300F               	movlw	15
   889  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   890  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   891  07B7  0086               	movwf	6	;volatile
   892                           
   893                           ;dotmatrix6.c: 177: PORTD=data1;
   894  07B8  0870               	movf	line@data1,w
   895  07B9  0088               	movwf	8	;volatile
   896                           
   897                           ;dotmatrix6.c: 178: PORTC=data2;
   898  07BA  0871               	movf	line@data2,w
   899  07BB  0087               	movwf	7	;volatile
   900                           
   901                           ;dotmatrix6.c: 181: }
   902                           
   903                           ;dotmatrix6.c: 179: break;
   904  07BC  0008               	return
   905  07BD                     l748:	
   906  07BD  0872               	movf	line@line,w
   907                           
   908                           ; Switch size 1, requested type "space"
   909                           ; Number of cases is 16, Range of values is 1 to 16
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte           49    25 (average)
   913                           ; direct_byte           59    11 (fixed)
   914                           ; jumptable            263     9 (fixed)
   915                           ;	Chosen strategy is simple_byte
   916  07BE  3A01               	xorlw	1	; case 1
   917  07BF  1903               	skipnz
   918  07C0  2F2B               	goto	l702
   919  07C1  3A03               	xorlw	3	; case 2
   920  07C2  1903               	skipnz
   921  07C3  2F35               	goto	l710
   922  07C4  3A01               	xorlw	1	; case 3
   923  07C5  1903               	skipnz
   924  07C6  2F3E               	goto	l712
   925  07C7  3A07               	xorlw	7	; case 4
   926  07C8  1903               	skipnz
   927  07C9  2F47               	goto	l714
   928  07CA  3A01               	xorlw	1	; case 5
   929  07CB  1903               	skipnz
   930  07CC  2F50               	goto	l716
   931  07CD  3A03               	xorlw	3	; case 6
   932  07CE  1903               	skipnz
   933  07CF  2F59               	goto	l718
   934  07D0  3A01               	xorlw	1	; case 7
   935  07D1  1903               	skipnz
   936  07D2  2F62               	goto	l720
   937  07D3  3A0F               	xorlw	15	; case 8
   938  07D4  1903               	skipnz
   939  07D5  2F6B               	goto	l722
   940  07D6  3A01               	xorlw	1	; case 9
   941  07D7  1903               	skipnz
   942  07D8  2F74               	goto	l724
   943  07D9  3A03               	xorlw	3	; case 10
   944  07DA  1903               	skipnz
   945  07DB  2F7E               	goto	l732
   946  07DC  3A01               	xorlw	1	; case 11
   947  07DD  1903               	skipnz
   948  07DE  2F87               	goto	l734
   949  07DF  3A07               	xorlw	7	; case 12
   950  07E0  1903               	skipnz
   951  07E1  2F90               	goto	l736
   952  07E2  3A01               	xorlw	1	; case 13
   953  07E3  1903               	skipnz
   954  07E4  2F99               	goto	l738
   955  07E5  3A03               	xorlw	3	; case 14
   956  07E6  1903               	skipnz
   957  07E7  2FA2               	goto	l740
   958  07E8  3A01               	xorlw	1	; case 15
   959  07E9  1903               	skipnz
   960  07EA  2FAB               	goto	l742
   961  07EB  3A1F               	xorlw	31	; case 16
   962  07EC  1903               	skipnz
   963  07ED  2FB4               	goto	l744
   964  07EE  2FEF               	goto	l73
   965  07EF                     l73:	
   966  07EF  0008               	return
   967  07F0                     __end_of_line:	
   968                           
   969                           	psect	text3
   970  06A0                     __ptext3:	
   971 ;; *************** function _scroll *****************
   972 ;; Defined at:
   973 ;;		line 62 in file "dotmatrix6.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  w               1    wreg     PTR unsigned int 
   976 ;;		 -> main@w2(32), 
   977 ;;  w2              1    0[COMMON] PTR unsigned int 
   978 ;;		 -> main@tmp(32), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  w               1    7[COMMON] PTR unsigned int 
   981 ;;		 -> main@w2(32), 
   982 ;;  j               2   10[COMMON] int 
   983 ;;  i               2    8[COMMON] int 
   984 ;; Return value:  Size  Location     Type
   985 ;;		None               void
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         1       0       0       0       0
   994 ;;      Locals:         5       0       0       0       0
   995 ;;      Temps:          6       0       0       0       0
   996 ;;      Totals:        12       0       0       0       0
   997 ;;Total ram usage:       12 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _scroll
  1008  06A0                     _scroll:	
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _scroll: [wreg-fsr0h+status,2+status,0+btemp+1]
  1012                           ;scroll@w stored from wreg
  1013  06A0  00F7               	movwf	scroll@w
  1014                           
  1015                           ;dotmatrix6.c: 63: for(int i=0;i<15;i++){
  1016  06A1  01F8               	clrf	scroll@i
  1017  06A2  01F9               	clrf	scroll@i+1
  1018  06A3  0879               	movf	scroll@i+1,w
  1019  06A4  3A80               	xorlw	128
  1020  06A5  00FF               	movwf	127
  1021  06A6  3080               	movlw	128
  1022  06A7  027F               	subwf	127,w
  1023  06A8  1D03               	skipz
  1024  06A9  2EAC               	goto	u165
  1025  06AA  300F               	movlw	15
  1026  06AB  0278               	subwf	scroll@i,w
  1027  06AC                     u165:	
  1028  06AC  1803               	btfsc	3,0
  1029  06AD  2ED9               	goto	l788
  1030  06AE                     l782:	
  1031                           
  1032                           ;dotmatrix6.c: 64: w[i]=w[i+1];
  1033  06AE  0878               	movf	scroll@i,w
  1034  06AF  00F1               	movwf	??_scroll
  1035  06B0  0771               	addwf	??_scroll,w
  1036  06B1  3E02               	addlw	2
  1037  06B2  0777               	addwf	scroll@w,w
  1038  06B3  00F2               	movwf	??_scroll+1
  1039  06B4  0872               	movf	??_scroll+1,w
  1040  06B5  0084               	movwf	4
  1041  06B6  1383               	bcf	3,7	;select IRP bank0
  1042  06B7  0800               	movf	0,w
  1043  06B8  00F3               	movwf	??_scroll+2
  1044  06B9  0A84               	incf	4,f
  1045  06BA  0800               	movf	0,w
  1046  06BB  00F4               	movwf	??_scroll+3
  1047  06BC  0878               	movf	scroll@i,w
  1048  06BD  00F5               	movwf	??_scroll+4
  1049  06BE  0775               	addwf	??_scroll+4,w
  1050  06BF  0777               	addwf	scroll@w,w
  1051  06C0  00F6               	movwf	??_scroll+5
  1052  06C1  0876               	movf	??_scroll+5,w
  1053  06C2  0084               	movwf	4
  1054  06C3  0873               	movf	??_scroll+2,w
  1055  06C4  0080               	movwf	0
  1056  06C5  0A84               	incf	4,f
  1057  06C6  0874               	movf	??_scroll+3,w
  1058  06C7  0080               	movwf	0
  1059  06C8  3001               	movlw	1
  1060  06C9  07F8               	addwf	scroll@i,f
  1061  06CA  1803               	skipnc
  1062  06CB  0AF9               	incf	scroll@i+1,f
  1063  06CC  3000               	movlw	0
  1064  06CD  07F9               	addwf	scroll@i+1,f
  1065  06CE  0879               	movf	scroll@i+1,w
  1066  06CF  3A80               	xorlw	128
  1067  06D0  00FF               	movwf	127
  1068  06D1  3080               	movlw	128
  1069  06D2  027F               	subwf	127,w
  1070  06D3  1D03               	skipz
  1071  06D4  2ED7               	goto	u175
  1072  06D5  300F               	movlw	15
  1073  06D6  0278               	subwf	scroll@i,w
  1074  06D7                     u175:	
  1075  06D7  1C03               	skipc
  1076  06D8  2EAE               	goto	l782
  1077  06D9                     l788:	
  1078                           
  1079                           ;dotmatrix6.c: 65: }
  1080                           ;dotmatrix6.c: 66: w[15]=w2[0];
  1081  06D9  0870               	movf	scroll@w2,w
  1082  06DA  0084               	movwf	4
  1083  06DB  1383               	bcf	3,7	;select IRP bank0
  1084  06DC  0800               	movf	0,w
  1085  06DD  00F1               	movwf	??_scroll
  1086  06DE  0A84               	incf	4,f
  1087  06DF  0800               	movf	0,w
  1088  06E0  00F2               	movwf	??_scroll+1
  1089  06E1  0877               	movf	scroll@w,w
  1090  06E2  3E1E               	addlw	30
  1091  06E3  0084               	movwf	4
  1092  06E4  0871               	movf	??_scroll,w
  1093  06E5  0080               	movwf	0
  1094  06E6  0A84               	incf	4,f
  1095  06E7  0872               	movf	??_scroll+1,w
  1096  06E8  0080               	movwf	0
  1097                           
  1098                           ;dotmatrix6.c: 67: for(int j=0;j<15;j++){
  1099  06E9  01FA               	clrf	scroll@j
  1100  06EA  01FB               	clrf	scroll@j+1
  1101  06EB  087B               	movf	scroll@j+1,w
  1102  06EC  3A80               	xorlw	128
  1103  06ED  00FF               	movwf	127
  1104  06EE  3080               	movlw	128
  1105  06EF  027F               	subwf	127,w
  1106  06F0  1D03               	skipz
  1107  06F1  2EF4               	goto	u185
  1108  06F2  300F               	movlw	15
  1109  06F3  027A               	subwf	scroll@j,w
  1110  06F4                     u185:	
  1111  06F4  1803               	btfsc	3,0
  1112  06F5  2F21               	goto	l802
  1113  06F6                     l796:	
  1114                           
  1115                           ;dotmatrix6.c: 68: w2[j]=w2[j+1];
  1116  06F6  087A               	movf	scroll@j,w
  1117  06F7  00F1               	movwf	??_scroll
  1118  06F8  0771               	addwf	??_scroll,w
  1119  06F9  3E02               	addlw	2
  1120  06FA  0770               	addwf	scroll@w2,w
  1121  06FB  00F2               	movwf	??_scroll+1
  1122  06FC  0872               	movf	??_scroll+1,w
  1123  06FD  0084               	movwf	4
  1124  06FE  1383               	bcf	3,7	;select IRP bank0
  1125  06FF  0800               	movf	0,w
  1126  0700  00F3               	movwf	??_scroll+2
  1127  0701  0A84               	incf	4,f
  1128  0702  0800               	movf	0,w
  1129  0703  00F4               	movwf	??_scroll+3
  1130  0704  087A               	movf	scroll@j,w
  1131  0705  00F5               	movwf	??_scroll+4
  1132  0706  0775               	addwf	??_scroll+4,w
  1133  0707  0770               	addwf	scroll@w2,w
  1134  0708  00F6               	movwf	??_scroll+5
  1135  0709  0876               	movf	??_scroll+5,w
  1136  070A  0084               	movwf	4
  1137  070B  0873               	movf	??_scroll+2,w
  1138  070C  0080               	movwf	0
  1139  070D  0A84               	incf	4,f
  1140  070E  0874               	movf	??_scroll+3,w
  1141  070F  0080               	movwf	0
  1142  0710  3001               	movlw	1
  1143  0711  07FA               	addwf	scroll@j,f
  1144  0712  1803               	skipnc
  1145  0713  0AFB               	incf	scroll@j+1,f
  1146  0714  3000               	movlw	0
  1147  0715  07FB               	addwf	scroll@j+1,f
  1148  0716  087B               	movf	scroll@j+1,w
  1149  0717  3A80               	xorlw	128
  1150  0718  00FF               	movwf	127
  1151  0719  3080               	movlw	128
  1152  071A  027F               	subwf	127,w
  1153  071B  1D03               	skipz
  1154  071C  2F1F               	goto	u195
  1155  071D  300F               	movlw	15
  1156  071E  027A               	subwf	scroll@j,w
  1157  071F                     u195:	
  1158  071F  1C03               	skipc
  1159  0720  2EF6               	goto	l796
  1160  0721                     l802:	
  1161                           
  1162                           ;dotmatrix6.c: 69: }
  1163                           ;dotmatrix6.c: 70: w2[15]=0x00;
  1164  0721  0870               	movf	scroll@w2,w
  1165  0722  3E1E               	addlw	30
  1166  0723  0084               	movwf	4
  1167  0724  1383               	bcf	3,7	;select IRP bank0
  1168  0725  0180               	clrf	0
  1169  0726  0A84               	incf	4,f
  1170  0727  0180               	clrf	0
  1171  0728  0008               	return
  1172  0729                     __end_of_scroll:	
  1173                           
  1174                           	psect	text4
  1175  05C7                     __ptext4:	
  1176 ;; *************** function _copy *****************
  1177 ;; Defined at:
  1178 ;;		line 57 in file "dotmatrix6.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  origin          1    wreg     PTR unsigned int 
  1181 ;;		 -> main@w1(32), 
  1182 ;;  copy            1    0[COMMON] PTR unsigned int 
  1183 ;;		 -> main@w2(32), main@tmp(32), 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  origin          1    7[COMMON] PTR unsigned int 
  1186 ;;		 -> main@w1(32), 
  1187 ;;  i               2    8[COMMON] int 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;		None               void
  1190 ;; Registers used:
  1191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         1       0       0       0       0
  1198 ;;      Locals:         3       0       0       0       0
  1199 ;;      Temps:          6       0       0       0       0
  1200 ;;      Totals:        10       0       0       0       0
  1201 ;;Total ram usage:       10 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function _copy
  1212  05C7                     _copy:	
  1213                           
  1214                           ;incstack = 0
  1215                           ; Regs used in _copy: [wreg-fsr0h+status,2+status,0+btemp+1]
  1216                           ;copy@origin stored from wreg
  1217  05C7  00F7               	movwf	copy@origin
  1218                           
  1219                           ;dotmatrix6.c: 58: for(int i=0;i<16;i++){
  1220  05C8  01F8               	clrf	copy@i
  1221  05C9  01F9               	clrf	copy@i+1
  1222  05CA                     L2:	
  1223  05CA  0879               	movf	copy@i+1,w
  1224  05CB  3A80               	xorlw	128
  1225  05CC  00FF               	movwf	127
  1226  05CD  3080               	movlw	128
  1227  05CE  027F               	subwf	127,w
  1228  05CF  1D03               	skipz
  1229  05D0  2DD3               	goto	u125
  1230  05D1  3010               	movlw	16
  1231  05D2  0278               	subwf	copy@i,w
  1232  05D3                     u125:	
  1233  05D3  1803               	btfsc	3,0
  1234  05D4  0008               	return
  1235                           
  1236                           ;dotmatrix6.c: 59: copy[i]=origin[i];
  1237  05D5  0878               	movf	copy@i,w
  1238  05D6  00F1               	movwf	??_copy
  1239  05D7  0771               	addwf	??_copy,w
  1240  05D8  0777               	addwf	copy@origin,w
  1241  05D9  00F2               	movwf	??_copy+1
  1242  05DA  0872               	movf	??_copy+1,w
  1243  05DB  0084               	movwf	4
  1244  05DC  1383               	bcf	3,7	;select IRP bank0
  1245  05DD  0800               	movf	0,w
  1246  05DE  00F3               	movwf	??_copy+2
  1247  05DF  0A84               	incf	4,f
  1248  05E0  0800               	movf	0,w
  1249  05E1  00F4               	movwf	??_copy+3
  1250  05E2  0878               	movf	copy@i,w
  1251  05E3  00F5               	movwf	??_copy+4
  1252  05E4  0775               	addwf	??_copy+4,w
  1253  05E5  0770               	addwf	copy@copy,w
  1254  05E6  00F6               	movwf	??_copy+5
  1255  05E7  0876               	movf	??_copy+5,w
  1256  05E8  0084               	movwf	4
  1257  05E9  0873               	movf	??_copy+2,w
  1258  05EA  0080               	movwf	0
  1259  05EB  0A84               	incf	4,f
  1260  05EC  0874               	movf	??_copy+3,w
  1261  05ED  0080               	movwf	0
  1262  05EE  3001               	movlw	1
  1263  05EF  07F8               	addwf	copy@i,f
  1264  05F0  1803               	skipnc
  1265  05F1  0AF9               	incf	copy@i+1,f
  1266  05F2  3000               	movlw	0
  1267  05F3  07F9               	addwf	copy@i+1,f
  1268  05F4  2DCA               	goto	L2
  1269  05F5                     __end_of_copy:	
  1270  007E                     btemp	set	126	;btemp
  1271  007E                     wtemp	set	126
  1272  007E                     wtemp0	set	126
  1273  0080                     wtemp1	set	128
  1274  0082                     wtemp2	set	130
  1275  0084                     wtemp3	set	132
  1276  0086                     wtemp4	set	134
  1277  0088                     wtemp5	set	136
  1278  007F                     wtemp6	set	127
  1279  007E                     ttemp	set	126
  1280  007E                     ttemp0	set	126
  1281  0081                     ttemp1	set	129
  1282  0084                     ttemp2	set	132
  1283  0087                     ttemp3	set	135
  1284  007F                     ttemp4	set	127
  1285  007E                     ltemp	set	126
  1286  007E                     ltemp0	set	126
  1287  0082                     ltemp1	set	130
  1288  0086                     ltemp2	set	134
  1289  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      70
    BANK1            80     32      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    word2@a	PTR unsigned int  size(1) Largest target is 32
		 -> main@w2(BANK1[32]), 

    scroll@w2	PTR unsigned int  size(1) Largest target is 32
		 -> main@tmp(BANK0[32]), 

    scroll@w	PTR unsigned int  size(1) Largest target is 32
		 -> main@w2(BANK1[32]), 

    copy@origin	PTR unsigned int  size(1) Largest target is 32
		 -> main@w1(BANK0[32]), 

    copy@copy	PTR unsigned int  size(1) Largest target is 32
		 -> main@w2(BANK1[32]), main@tmp(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_word2
    _word2->_line

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               102   102      0    3638
                                              0 BANK0     70    70      0
                                              0 BANK1     32    32      0
                               _copy
                             _scroll
                              _word2
 ---------------------------------------------------------------------------------
 (1) _word2                                               11    11      0    2711
                                              3 COMMON    11    11      0
                               _line
 ---------------------------------------------------------------------------------
 (2) _line                                                 3     1      2    2528
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _scroll                                              12    11      1     414
                                              0 COMMON    12    11      1
 ---------------------------------------------------------------------------------
 (1) _copy                                                10     9      1     294
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _copy
   _scroll
   _word2
     _line

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     20      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     46      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      94      12        0.0%
ABS                  0      0      94       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri Jul 04 17:02:25 2014

                      pc 0002              __CFG_CP$OFF 0000                       l73 07EF  
                     fsr 0004                      l710 0735                      l702 072B  
                    l720 0762                      l712 073E                      l802 0721  
                    l722 076B                      l714 0747                      l740 07A2  
                    l732 077E                      l724 0774                      l716 0750  
                    l742 07AB                      l734 0787                      l718 0759  
                    l744 07B4                      l736 0790                      l824 0693  
                    l808 0653                      l738 0799                      l818 067A  
                    l748 07BD                      l782 06AE                      l796 06F6  
                    l788 06D9                      u200 0646                      u125 05D3  
                    u215 0678                      u145 0601                      u225 0691  
                    u165 06AC                      u237 0629                      u175 06D7  
                    u185 06F4             __CFG_CPD$OFF 0000                      u195 071F  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 0634  
                   _copy 05C7                     _line 0729                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070                    ?_copy 0070  
                  ?_line 0070            __CFG_WDTE$OFF 0000           __CFG_DEBUG$OFF 0000  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _word2 05F5                    main@i 0064  
                  copy@i 0078           __CFG_BOREN$OFF 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07F0  
           __end_of_main 06A0             __end_of_copy 05F5             __end_of_line 07F0  
                 ??_main 0020                   ??_copy 0071                   ??_line 0072  
                 ?_word2 0070                   _scroll 06A0                   main@w1 0024  
                 main@w2 00C0                   word2@a 007B                   word2@i 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK1 05A7  
          __end_of_word2 0634                  ??_word2 0073               __pmaintext 0634  
                ?_scroll 0070                  __ptext1 05F5                  __ptext2 0729  
                __ptext3 06A0                  __ptext4 05C7          __size_of_scroll 0089  
                main@tmp 0044     end_of_initialization 07FC                  scroll@i 0078  
                scroll@j 007A                  scroll@w 0077               copy@origin 0077  
         __end_of_scroll 0729      start_initialization 07F0               init_fetch0 0596  
            __pdataBANK1 00A0                 ??_scroll 0071                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00C0           __size_of_word2 003F  
              main@F1185 00A0                line@data1 0070                line@data2 0071  
          __size_of_main 006C            __size_of_copy 002E            __size_of_line 00C7  
               copy@copy 0070                 line@line 0072                 init_ram0 059A  
               scroll@w2 0070  
